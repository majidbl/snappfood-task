// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/delay/assign": {
            "post": {
                "description": "assign delay of an order that delivery is passed to an agent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delay"
                ],
                "summary": "assign delay",
                "parameters": [
                    {
                        "description": "necessary item for assign delay",
                        "name": "AssignDelayRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AssignDelayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AssignDelayResponse"
                        }
                    },
                    "400": {
                        "description": "some field is invalid",
                        "schema": {
                            "$ref": "#/definitions/api.AssignDelayResponse"
                        }
                    },
                    "500": {
                        "description": "other error",
                        "schema": {
                            "$ref": "#/definitions/api.AssignDelayResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/delay/report": {
            "post": {
                "description": "report delay of a order that delivery is passed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delay"
                ],
                "summary": "report delay",
                "parameters": [
                    {
                        "description": "necessary item for reporting delay",
                        "name": "DelayReportRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DelayReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DelayReportResponse"
                        }
                    },
                    "400": {
                        "description": "some field is invalid",
                        "schema": {
                            "$ref": "#/definitions/api.DelayReportResponse"
                        }
                    },
                    "500": {
                        "description": "other error",
                        "schema": {
                            "$ref": "#/definitions/api.DelayReportResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AssignDelayRequest": {
            "type": "object",
            "required": [
                "agentId"
            ],
            "properties": {
                "agentId": {
                    "type": "integer"
                }
            }
        },
        "api.AssignDelayResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                }
            }
        },
        "api.DelayReportRequest": {
            "type": "object",
            "required": [
                "orderId"
            ],
            "properties": {
                "orderId": {
                    "type": "integer"
                }
            }
        },
        "api.DelayReportResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
